---
title: "Analysis of UCSB Undergraduate Grade Trends"
author: "Shreya Sinha" # <- add your name here
date: "`r Sys.Date()`"
params: 
  showCode: FALSE
execute: 
  warning: FALSE # <- this makes sure your code chunks are evaluated
  message: FALSE
format:
  html:
    fontsize: 1.1rem
fig-cap-location: top
output: pdf_document
---

```{r setup, include = FALSE}
rm(list = ls())
library(tidyverse)
library(janitor)
library(lubridate)
library(gt)
library(grid)
library(data.table)

```

### Data

UC Santa Barbara studentsâ€™ grade data from Fall 2009 to Spring 2024 were obtained through Public Records Act requests facilitated by the Daily Nexus. The dataset includes detailed information on course grades across various departments and academic levels, encompassing both graduate and undergraduate courses. It provides a breakdown of letter grades, Pass/No Pass enrollments, and other grade-related metrics.

### Findings

Figure 1 shows the average GPA for undergraduate courses across the College of Engineering, College of Letters & Science, Gervitz School of Education, and the three divisions within Letters & Science, spanning the 2009-2010 to 2023-2024 academic years (excluding Summer 2024). Over this period, a general upward trend in average GPA is evident across all colleges and divisions, with the most significant increases observed in the Humanities & Fine Arts division of Letters & Science and the Gervitz School of Education. In the 2021-2022 academic year, all divisions and colleges, except for Humanities & Fine Arts and the Gervitz School of Education, experienced a marked decline in average GPA.

Figure 2 complements this analysis by showing the percentage of A's awarded in undergraduate courses across the same colleges and divisions over the same period. This percentage includes A plus and minus grades and mirrors the overall trend in average GPA. The most notable increase in the percentage of A's is in the Mathematical, Life, & Physical Sciences division of Letters & Science, which has approximately doubled since the 2009-2010 academic year.

```{r echo = FALSE, message=FALSE, warning=FALSE}

course_grades <- read_csv("courseGrades.csv")


# Clean data and categorize by academic year, department, whether it is
# upper division/lower division, course number, college and division
# GPA, percent of A's (plus and minuses), by year, department

cleaned_course_grades <- course_grades %>% mutate(
  #create column for school year based on quarter + year
  academic_year = case_when( 
    year == "2009" & quarter == "Fall" |
      year == "2010" & quarter == "Winter" |
      year == "2010" & quarter == "Spring" |
      year == "2010" & quarter == "Summer" ~ "2009-2010",
    year == "2010" & quarter == "Fall" |
      year == "2011" & quarter == "Winter" |
      year == "2011" & quarter == "Spring" |
      year == "2011" & quarter == "Summer" ~ "2010-2011",
    year == "2011" & quarter == "Fall" |
      year == "2012" & quarter == "Winter" |
      year == "2012" & quarter == "Spring" |
      year == "2012" & quarter == "Summer" ~ "2011-2012",
    year == "2012" & quarter == "Fall" |
      year == "2013" & quarter == "Winter" |
      year == "2013" & quarter == "Spring" |
      year == "2013" & quarter == "Summer" ~ "2012-2013",
    year == "2013" & quarter == "Fall" |
      year == "2014" & quarter == "Winter" |
      year == "2014" & quarter == "Spring" |
      year == "2014" & quarter == "Summer" ~ "2013-2014",
    year == "2014" & quarter == "Fall" |
      year == "2015" & quarter == "Winter" |
      year == "2015" & quarter == "Spring" |
      year == "2015" & quarter == "Summer" ~ "2014-2015",
    year == "2015" & quarter == "Fall" |
      year == "2016" & quarter == "Winter" |
      year == "2016" & quarter == "Spring" |
      year == "2016" & quarter == "Summer" ~ "2015-2016",
    year == "2016" & quarter == "Fall" |
      year == "2017" & quarter == "Winter" |
      year == "2017" & quarter == "Spring" |
      year == "2017" & quarter == "Summer" ~ "2016-2017",
    year == "2017" & quarter == "Fall" |
      year == "2018" & quarter == "Winter" |
      year == "2018" & quarter == "Spring" |
      year == "2018" & quarter == "Summer" ~ "2017-2018",
    year == "2018" & quarter == "Fall" |
      year == "2019" & quarter == "Winter" |
      year == "2019" & quarter == "Spring" |
      year == "2019" & quarter == "Summer" ~ "2018-2019",
    year == "2019" & quarter == "Fall" |
      year == "2020" & quarter == "Winter" |
      year == "2020" & quarter == "Spring" |
      year == "2020" & quarter == "Summer" ~ "2019-2020",
    year == "2020" & quarter == "Fall" |
      year == "2021" & quarter == "Winter" |
      year == "2021" & quarter == "Spring" |
      year == "2021" & quarter == "Summer" ~ "2020-2021",
    year == "2021" & quarter == "Fall" |
      year == "2022" & quarter == "Winter" |
      year == "2022" & quarter == "Spring" |
      year == "2022" & quarter == "Summer" ~ "2021-2022",
    year == "2022" & quarter == "Fall" |
      year == "2023" & quarter == "Winter" |
      year == "2023" & quarter == "Spring" |
      year == "2023" & quarter == "Summer" ~ "2022-2023",
    year == "2023" & quarter == "Fall" |
      year == "2024" & quarter == "Winter" |
      year == "2024" & quarter == "Spring" |
      year == "2024" & quarter == "Summer" ~ "2023-2024")) %>% 
  rename("A_plus" = "Ap",
         "A_minus" = "Am",
         "B_plus" = "Bp",
         "B_minus" = "Bm",
         "C_plus" = "Cp",
         "C_minus" = "Cm",
         "D_plus" = "Dp",
         "D_minus" = "Dm") %>% 
  mutate(total_As = A_plus + A_minus + A,
         total_Bs = B_plus + B_minus + B,
         total_Cs = C_plus + C_minus + C,
         total_Ds = D_plus + D_minus + D,
         total_Fs = F) %>% 
  # column for quarter and year
  mutate(quarter_year = paste(quarter, year, sep = " ")) %>% 
# remove plus and minus grade columns and year column
  select(-A_plus, -A_minus, -A, -B_plus, -B_minus, -B, -C_plus, -C_minus, -C, -D_plus, -D_minus, -D, -F, -year) %>% 
  #create column for course number
  mutate(course_number = parse_number(course)) %>% 
  relocate(course_number, .after = "course") %>% 
  # remove graduate classes (i.e. course number >= 200)
  filter(course_number < 200) %>% 
  # categorize division (i.e. if course is < 100 it is lower division, if course is >= 100 it is upper division)
  mutate(course_level = case_when(
    course_number < 100 ~ "lower division",
    course_number >= 100 ~ "upper division")) %>% 
  # remove extra spaces in course code
  mutate(course = str_squish(course)) %>% 
  # rename department codes for two word codes
  # regex finds matches from beginning of string in `course` column that
  # have 2 words separated by spaces like "[word] [word]"
  mutate(dept = if_else(str_detect(course, "^\\w+\\s+\\w+\\s"), 
                        str_extract(course, "^\\w+\\s+\\w+\\s"),
                        dept)) %>% 
  # if dept has "W" at the end of the string, it is designated as an online course
  # unique(course_grades$course[str_detect(course_grades$course, "\\s*\\w*W\\s*\\d+$")==TRUE])
  mutate(online = if_else(str_detect(dept, "\\s*\\w*W\\s*$"), 1, 0)) %>%
  # remove "W" from end of dept
  mutate(dept = str_remove(dept, "W\\s*$")) %>% 
  mutate(dept = str_squish(dept),
         # astro classes are in physics department
         dept = case_match(
           dept, 
           c("ASTRO", "PHYS") ~ "PHYS",
           c("JAPAN", "KOR", "CHIN") ~ "EACS",
           c("HEB", "MES", "RG ST") ~ "RG ST",
           c("FR", "ITAL") ~ "FRIT",
           c("LATIN", "GREEK", "CLASS") ~ "CLASS",
           c("MUS", "MUS A") ~ "MUS",
           c("POL S", "POL SH") ~ "POL S",
           c("PORT", "SPAN") ~ "SPAN PORT",
           c("DANCE", "THTR") ~ "THTR DANCE",
           c("GER", "SLAV", "RUSS") ~ "GER", 
           .default = dept)) %>% 
  mutate(total_students = nLetterStudents + nPNPStudents) %>% 
  # remove satisfactory and unsatisfactory grade columns
  select(-S, -su)
           

# Make separate table with course code, division, department, and full course name

course_info <- cleaned_course_grades %>%
  select(course, dept, course_level) %>% 
  distinct() %>% 
  mutate(division = case_when(
    # humanities & Fine arts departments from https://www.hfa.ucsb.edu/academics/#majors-section
    dept %in% c("ART", "ARTST", "CLASS", "C LIT", "EACS", "KOR", "JAPAN", "CHIN",
                "ENGL", "FAMST","FLMST", "ITAL", "FR", "FRIT", "GER", "SLAV", "RUSS", "HIST",
                "ARTHI", "LAIS", "LING", "LATIN","GREEK", "MUS", "MUS A", "PHIL", "RG ST", "HEB", "MES", "PORT", 
                "SPAN", "SPAN PORT", "DANCE", "THTR", "THTR DANCE", "WRIT", "ME ST") ~ "Humanities & Fine Arts",
    # social sciences departments from https://www.socialsciences.ucsb.edu/units
    # including CNCSP (clinical psychology) because it is a social science
    dept %in% c("ANTH", "AS AM", "BL ST", "CH ST", "COMM", "ECON", "ES", "ESS",
                "FEMST", "GPS", "GLOBL", "MS", "POL S", "SOC", "LAWSO", "POL SH") ~ "Social Sciences",
    # science departments from https://www.science.ucsb.edu/programs
    dept %in% c("CHEM", "EARTH", "GEOL", "EEMB", "GEOG", "MATH", "MCDB", "ASTRO", "PHYS",
                "PSY", "PSTAT", "ENV S", "SHS", "BMSE") ~ "Mathematical, Life, & Physical Sciences",
    # engineering departments from https://engineering.ucsb.edu/departments
    # there are no divisions in the college of engineering but for consistency
    # the division for engineering courses will be "Engineering"
    dept %in% c("CMPSC", "CH E", "BIOE", "ECE", "ENGR", "MATRL", "ME", "TMP") ~ "College of Engineering",
    # division for "INT" classes will be "interdisciplinary"
    dept %in% c("INT", "MAT") ~ "Interdisciplinary",
    # undergraduate classes in Gervitz School
    dept %in% c("ED", "CNCSP") ~ "Gervitz School of Education",
    # division for "CS" classes will be "Creative Studies" 
    # str_detect is finding dept where there is a space before "CS"; or dept is CMPSCCS or CMPTGCS or W&L (writing and literature)
    str_detect(dept, "\\sCS") |
      dept == "CMPSCCS" |
      dept == "CMPTGCS" |
      dept == "W&L" ~ "College of Creative Studies")) %>%
  mutate(
    college = case_match(
      division,
      "Gervitz School of Education" ~ "Gervitz School of Education",
      c("Humanities & Fine Arts",
        "Social Sciences",
        "Mathematical, Life, & Physical Sciences") ~ "College of Letters & Science",
      "College of Engineering" ~ "College of Engineering",
      "College of Creative Studies" ~ "College of Creative Studies",
      "Interdisciplinary" ~ "Interdisciplinary"
    )
  )

# join course_info with cleaned_course_grades
course_grade_info <- cleaned_course_grades %>%
  left_join(course_info, by = c("course", "dept", "course_level")) 
 

# course average grades weighted by number of students by academic year

# average grade by college by year
college_avg_grade <- course_grade_info %>%
  # find average GPA, percent of A's, and total number of students enrolled for a course offered
  # by multiple instructors/quarters in an academic year
  summarize(course_avgGPA = weighted.mean(avgGPA, w = total_students, na.rm = T),
            yearly_course_enrollment = sum(total_students, na.rm = T),
            course_As = sum(total_As, na.rm = T),
            .by = c(academic_year, course, dept, division, college)) %>% 
  # find weighted average GPA and percent of A's for each college per year
  summarize(college_GPA = weighted.mean(course_avgGPA, w = yearly_course_enrollment, na.rm = T),
            # sum of course enrollment for each year by college 
            college_course_enrollment = sum(yearly_course_enrollment, na.rm = T),
            college_percent_A = sum(course_As, na.rm = T) / college_course_enrollment * 100,
            .by = c(academic_year, college))


# average grade by division by year 

division_avg_grade <- course_grade_info %>%
  # find average GPA and total number of students enrolled for a course offered
  # by multiple instructors/quarters in an academic year
  summarize(course_avgGPA = weighted.mean(avgGPA, w = total_students, na.rm = T),
            yearly_course_enrollment = sum(total_students, na.rm = T),
            course_As = sum(total_As, na.rm = T),
            .by = c(academic_year, course, division)) %>% 
  # find average GPA for each division per year
  summarize(division_GPA = weighted.mean(course_avgGPA, w = yearly_course_enrollment, na.rm = T),
            division_course_enrollment = sum(yearly_course_enrollment, na.rm = T),
            division_percent_A = sum(course_As, na.rm = T) / division_course_enrollment * 100,
            .by = c(academic_year, division)) 

#joining division and college data
college_division_statistics <- division_avg_grade %>% 
  left_join(y = course_info %>% select(division, college) %>% distinct(),
            by = c("division"),
            relationship = "many-to-one") %>% 
  left_join(college_avg_grade,
            by = c("college", "academic_year"))
 

college_division_gpa_plot <- college_division_statistics %>% 
  filter(!is.na(college) & !is.na(division),
         division != "College of Creative Studies",
         division != "Interdisciplinary") %>% 
  ggplot(aes(x = academic_year, group = division))+
  geom_line(aes(y = college_GPA, colour = college), linewidth = .6)+
  geom_point(aes(y = college_GPA, colour = college), size = 1)+
  geom_line(aes(y = division_GPA, colour = division), linewidth = .6)+
  geom_point(aes(y = division_GPA, colour = division), size = 1)+
  labs(x = "Academic Year",
       y = "Grade Point Average (GPA)",
       colour = "College/Division")+
  theme_minimal()+
  theme(axis.text=element_text(size=9), #change font size of axis text
        axis.title=element_text(size=11), #change font size of axis titles
        legend.text=element_text(size=11), #change font size of legend text
        legend.title=element_text(size=11),#change font size of legend title   
        axis.text.x = element_text(angle = 60))+
  guides(colour = guide_legend(override.aes = list(linewidth = 2)))


#print(college_division_gpa_plot)
#ggsave('college_division_gpa_plot.png')

college_division_A_plot <- college_division_statistics %>% 
  filter(!is.na(college) & !is.na(division),
         division != "College of Creative Studies",
         division != "Interdisciplinary") %>% 
  ggplot(aes(x = academic_year, group = division))+
  geom_line(aes(y = college_percent_A, colour = college), size = .6)+
  geom_point(aes(y = college_percent_A, colour = college), size = 1)+
  geom_line(aes(y = division_percent_A, colour = division), size = .6)+
  geom_point(aes(y = division_percent_A, colour = division), size = 1)+
  labs(x = "Academic Year",
       y = "Percentage of A's (%)",
       colour = "College/Division") +
  theme_minimal()+
  theme(axis.text=element_text(size=9), #change font size of axis text
        axis.title=element_text(size=11), #change font size of axis titles
        legend.text=element_text(size=11), #change font size of legend text
        legend.title=element_text(size=11),#change font size of legend title   
        axis.text.x = element_text(angle = 55))+
  guides(colour = guide_legend(override.aes = list(linewidth = 2)))
```

```{r, echo = FALSE, fig.width=9, fig.height=4}
#| fig-cap: "Figure 1: Average GPA Over Time for UCSB Colleges and Divisions"

college_division_gpa_plot
```

\newpage

```{r, echo = FALSE, fig.width=9, fig.height=4}
#| fig-cap: "Figure 2: Percentage of A's Over Time for UCSB Colleges and Divisions"

college_division_A_plot
```

The percentage of A grades awarded in undergraduate courses in the 2023-2024 academic year for each department is presented on the last page.

### Methods

Each department in the dataset was manually categorized into its respective division and college, as this information was not available in the original dataset. The division and college assignments were based on existing academic classifications at UC Santa Barbara, with departments categorized according to their field of study. This categorization was essential for the subsequent analysis of grading trends across different academic units. To facilitate analysis of undergraduate course grades, courses with course numbers 200 or higher were excluded to remove graduate-level courses.

To analyze grade trends across colleges and academic divisions, data was aggregated in two stages: first at the course level and then at the college and division levels. For courses taught by multiple instructors or offered across multiple quarters within an academic year, the course-level average GPA was calculated as a weighted mean, with weights based on the total number of students enrolled in each course. Additionally, the total enrollment and the total number of A's (including plus and minus grades) for each course were summed across all quarters in the academic year.

Using these course-level metrics, data was then aggregated at the college and division levels for each academic year. For both colleges and divisions, the average GPA was calculated as a weighted mean of the course-level GPAs, with weights derived from yearly course enrollments. The total enrollment for each college and division was determined by summing the enrollments of all courses within the respective grouping. The percentage of A grades awarded was calculated by dividing the total number of A grades by the total enrollment for each college or division. This approach ensured a consistent methodology for examining grading patterns while accounting for variability in course sizes, grading distributions, and enrollment trends across academic groupings. \newpage

```{r echo = FALSE, message=FALSE, warning=FALSE}
#ggsave('college_division_A_plot.png')
#percent of A's for each department in the most recent year
percent_23_24 <- course_grade_info %>%
  filter(academic_year == "2023-2024" & division != "College Creative Studies"
         & avgGPA > 0) %>% 
  summarize(dept_enrollment = sum(total_students, na.rm = T),
            dept_percent_A = sum(total_As, na.rm = T) / dept_enrollment,
            .by = c(dept, college)) %>% 
  select(-dept_enrollment) %>%
  adorn_pct_formatting(digits = 2) %>% 
  mutate(dept = tolower(dept),
         # names from https://catalog.ucsb.edu/departments
         dept = case_match(dept,
           "anth" ~ "Anthropology",
           "art" ~ "Art",
           "as am" ~ "Asian American Studies",
           "arthi" ~ "History of Art & Architecture",
           "bioe" ~ "Bioengineering",
           "bl st" ~ "Black Studies",
           "c lit" ~ "Comparative Literature",
           "ch e" ~ "Chemical Engineering",
           "ch st" ~ "Chicana & Chicano Studies",
           "chem" ~ "Chemistry & Biochemistry",
           "class" ~ "Classics",
           "comm" ~ "Communication",
           "cmpsc" ~ "Computer Science",
           "cncsp" ~ "Counseling, Clinical & School Psychology",
           "thtr dance" ~ "Theater & Dance",
           "eacs" ~ "East Asian Cultural Studies",
           "econ" ~ "Economics",
           "earth" ~ "Earth Science",
           "ece" ~ "Electrical & Computer Engineering",
           "ed" ~ "Education",
           "eemb" ~ "Ecology, Evolution & Marine Biology",
           "engl" ~ "English",
           "engr" ~ "Engineering Sciences",
           "env s" ~ "Environmental Studies",
           "ess" ~ "Exercise & Sport Studies",
           "famst" ~ "Film & Media Studies",
           "femst" ~ "Feminist Studies",
           "frit" ~ "French & Italian",
           "geog" ~ "Geography",
           "ger" ~ "Germanic & Slavic Studies",
           "globl" ~ "Global Studies",
           "greek" ~ "Classics",
           "hist" ~ "History",
           "int" ~ "Interdisciplinary Studies",
           "lais" ~ "Latin American & Iberian Studies",
           "latin" ~ "Classics",
           "ling" ~ "Linguistics",
           "mat" ~ "Media Arts & Technology",
           "math" ~ "Mathematics",
           "matrl" ~ "Materials",
           "mcdb" ~ "Molecular, Cellular & Developmental Biology",
           "me" ~ "Mechanical Engineering",
           "rg st" ~ "Religious Studies",
           "ms" ~ "Military Science",
           "mus" ~ "Music",
           "phil" ~ "Philosophy",
           "phys" ~ "Physics",
           "pol s" ~ "Political Science",
           "span port" ~ "Spanish & Portuguese",
           "psy" ~ "Psychological & Brain Sciences",
           "pstat" ~ "Statistics & Applied Probability",
           "soc" ~ "Sociology",
           "tmp" ~ "Technology Management",
           "writ" ~ "Writing Program",
           .default = dept)) %>% 
  arrange(college, dept_percent_A) %>% 
  rename("Percentage of A's" = dept_percent_A,
         "Department" = dept,
         "College" = college)
 
# gtsave(percent_23_24, "percent_23_24")


# Split data  and recombine -----------------------------------------------

# filtering for only letters and science
percent_ls <- percent_23_24 %>% 
  filter(College == "College of Letters & Science") |>
  select(Department, `Percentage of A's`) |>
  as.data.frame()

percent_ls1 <- percent_ls[1:20,]

percent_ls2 <- percent_ls[21:40,]


# Rename to remove duplicate names ----------------------------------------

percent_ls_full <- data.frame(percent_ls1, percent_ls2)

names(percent_ls_full) <- c("a", "b", "aa", "bb")

# Generate Table & Relabel----------------------------------------------------------

percent_ls_full_pretty <- percent_ls_full |>
  gt()|>
  tab_header(title = md("Percentage of A's in 2023-2024"),
             subtitle = md("Data from Fall 2023 to Spring 2024")) |>
  cols_label(a = "Department",
             b = "Percentage of A's",
             aa = "Department",
             bb = "Percentage of A's")|>
  tab_spanner(label = md("College of Letters & Science"), 
              columns = c(a, b, aa, bb))|>
  tab_options(heading.title.font.size = 17, heading.subtitle.font.size = 14, table.font.size = 14,
              table.border.top.color = "white")
percent_ls_full_pretty 

percent_rest <- percent_23_24 |> 
  filter(College != "College of Letters & Science") |>
  gt(groupname_col = "College", row_group_as_column = TRUE)|>
  opt_row_striping(row_striping = TRUE)|>
  tab_options(row.striping.include_stub = FALSE, table.font.size = 14)

percent_rest
```
